/***
*AepServiceCodes.h - ???????????????????????????????????
*
*Purpose:
*	1.???????????????????
*	2.codeDataReportByIdToStr?codeDataReportByIdToBytes?codeDataReportByIdentifierToStr?codeDataReportByIdentifierToBytes??????????????????????
*	3.decodeCmdDownFromStr?decodeCmdDownFromBytes??????????????????????????
****/
#ifndef AEPSERVICECODES_H
#define AEPSERVICECODES_H

#include <stdlib.h>
#include <string.h>


#define AEP_BIG_ENDIAN 'b'
#define AEP_LITTLE_ENDIAN 'l'

static union { char c[4]; unsigned long mylong; } endian_test = {{ 'l', '?', '?', 'b' } };
#define AEP_ENDIANNESS ((char)endian_test.mylong)


typedef unsigned long long uint_64;
typedef unsigned int uint_32;  
typedef unsigned short uint_16;

//???????
#define AEP_CMD_SUCCESS 0						//????
#define AEP_CMD_FAILED 1						//????
#define AEP_CMD_INVALID_DATASET_TYPE 2			//???????
#define AEP_CMD_INVALID_DATASET_IDENTIFIER 3	//???????
#define AEP_CMD_PAYLOAD_PARSING_FAILED 4		//?????Payload????,??????????????


typedef struct AepStrStruct
{
	unsigned short len;
	char* str;
} AepString;
typedef AepString AepBytes;

//?????16?  
uint_16 aep_htons(uint_16 source);

//?????32?
uint_32 aep_htoni(uint_32 source);

//?????64?
uint_64 aep_htonl(uint_64 source);

//float
float aep_htonf(float source);

//double
double aep_htond(double source);

//16??????
void HexToStr(char *pbDest, char *pbSrc, int nLen);

//????16??
void StrToHex(char *pbDest, char *pbSrc, int nLen);


//????id??????????????,srcStruct???????????????,????????
AepString codeDataReportByIdToStr(int serviceId, void * srcStruct);

//????id??????????,srcStruct???????????????,????????
AepBytes codeDataReportByIdToBytes(int serviceId, void * srcStruct);

//????????????????????,srcStruct???????????????,????????
AepString codeDataReportByIdentifierToStr(char * serviceIdentifier, void * srcStruct);

//????????????????,srcStruct???????????????,????????
AepBytes codeDataReportByIdentifierToBytes(char * serviceIdentifier, void * srcStruct);

//??????????data????????serviceId???????
typedef struct CmdStruct 
{
	char* serviceIdentifier;
	unsigned short taskId;
	void * data;
	int code;
} AepCmdData;
//??????????,??????????
AepCmdData decodeCmdDownFromStr(char* source);
//??????????,????????
AepCmdData decodeCmdDownFromBytes(char* source, int len);



typedef struct RGB1_controlStruct 
{
	unsigned char RGB1_R;
	unsigned char RGB1_G;
	unsigned char RGB1_B;
} RGB1_control;
//????:??RGB1
int RGB1_control_DecodeCmdDown (char* source, RGB1_control* dest);


typedef struct motor_speed_controlStruct 
{
	short motor_speed;
} motor_speed_control;
//????:??????
int motor_speed_control_DecodeCmdDown (char* source, motor_speed_control* dest);


typedef struct sensor_data_reportStruct 
{
	float humility;
	float temperature;
} sensor_data_report;
//????:???????
AepString sensor_data_report_CodeDataReport (sensor_data_report srcStruct);



#endif
